.m {
  @each $breakpoint in map-keys($breakpoints) {
    $prefix: breakpoint-prefix($breakpoint);

    @include breakpoint-up($breakpoint) {
      @each $spacer, $value in $spacers {
        &#{$prefix}-#{$spacer} {
          margin: $value !important;
        }
      }
    }
  }

  &l {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            margin-left: $value !important;
          }
        }
      }
    }
  }

  &r {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            margin-right: $value !important;
          }
        }
      }
    }
  }

  &t {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            margin-top: $value !important;
          }
        }
      }
    }
  }

  &b {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            margin-bottom: $value !important;
          }
        }
      }
    }
  }

  &lr {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            margin-left: $value !important;
            margin-right: $value !important;
          }
        }
      }
    }
  }

  &bt {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            margin-bottom: $value !important;
            margin-top: $value !important;
          }
        }
      }
    }
  }
}

.p {
  @each $breakpoint in map-keys($breakpoints) {
    $prefix: breakpoint-prefix($breakpoint);

    @include breakpoint-up($breakpoint) {
      @each $spacer, $value in $spacers {
        &#{$prefix}-#{$spacer} {
          padding: $value !important;
        }
      }
    }
  }

  &l {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            padding-left: $value !important;
          }
        }
      }
    }
  }

  &r {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            padding-right: $value !important;
          }
        }
      }
    }
  }

  &t {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            padding-top: $value !important;
          }
        }
      }
    }
  }

  &b {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            padding-bottom: $value !important;
          }
        }
      }
    }
  }

  &lr {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            padding-left: $value !important;
            padding-right: $value !important;
          }
        }
      }
    }
  }

  &bt {
    @each $breakpoint in map-keys($breakpoints) {
      $prefix: breakpoint-prefix($breakpoint);

      @include breakpoint-up($breakpoint) {
        @each $spacer, $value in $spacers {
          &#{$prefix}-#{$spacer} {
            padding-bottom: $value !important;
            padding-top: $value !important;
          }
        }
      }
    }
  }
}
